import time
def instrucoes(tempo):
    while True:
        print("\nDeseja ler as instruções?")
        try:
            instrucoes = str(input("> "))
            if instrucoes == 'SIM' or instrucoes == 'Sim' or instrucoes == 'sim' or instrucoes == 'S' or instrucoes == 's':
                time.sleep(tempo)
                print("\nINSTRUÇÕES INICIAIS\n")
                time.sleep(tempo)
                print("• O jogo se resume em Pedra, Papel e Tesoura.")
                time.sleep(tempo/2)
                print("• Os personagem começam no nível 1.")
                time.sleep(tempo/2)
                print("• Ao utilizar uma poção, sua vida aumenta 15 pontos.")
                time.sleep(tempo/2)
                print("• Você poderá usar uma poção quando sua vida for menor que 25 pontos.")
                time.sleep(tempo/2)
                print("• Ao ganhar 2x consecutivas, o ataque inicial passa a ser somado a 1.")
                time.sleep(tempo/2)
                print("• Ao ganhar 3x consecutivas, o ataque inicial passa a ser somado a 10.")
                time.sleep(tempo/2)
                print("• Ao Empatar o ataque volta ao valor inicial.")
                time.sleep(tempo/2)
                print("• Ao Empatar 3x os dois personagens perdem 5 pontos de vida.")
                time.sleep(tempo/2)
                print("• Quando um dos personagens perde, o ataque volta a seu valor inicial")
                time.sleep(tempo)
                print("\nMUDANÇA DE NÍVEL\n")
                time.sleep(tempo)
                print("• Se um personagem de nível 1 sobreviver a 2 batalhas, ele avança para o nível 2")
                time.sleep(tempo/2)
                print("• Se um personagem de nível 2 sobreviver a 3 batalhas, ele avança para o nível 3")
                time.sleep(tempo/2)
                print("• Se um personagem de nível 3 sobreviver a 4 batalhas, ele avança para o nível 4")
                time.sleep(tempo/2)
                print("• Se um personagem de nível 4 sobreviver a 5 batalhas, ele avança para o nível 5")
                time.sleep(tempo)
                print("\nNÍVEIS\n")
                time.sleep(tempo)
                print("• Nível 1")
                time.sleep(tempo/2)
                print("  > Vida: 50")
                time.sleep(tempo/2)
                print("  > Poção: 2")
                time.sleep(tempo/2)
                print("  > Ataque: 5\n")
                time.sleep(tempo)
                print("• Nível 2")
                time.sleep(tempo/2)
                print("  > Vida: 55")
                time.sleep(tempo/2)
                print("  > Poção: 2")
                time.sleep(tempo/2)
                print("  > Ataque: 6\n")
                time.sleep(tempo)
                print("• Nível 3")
                time.sleep(tempo/2)
                print("  > Vida: 60")
                time.sleep(tempo/2)
                print("  > Poção: 3")
                time.sleep(tempo/2)
                print("  > Ataque: 7\n")
                time.sleep(tempo)
                print("• Nível 4")
                time.sleep(tempo/2)
                print("  > Vida: 65")
                time.sleep(tempo/2)
                print("  > Poção: 3")
                time.sleep(tempo/2)
                print("  > Ataque: 8\n")
                time.sleep(tempo)
                print("• Nível 5")
                time.sleep(tempo/2)
                print("  > Vida: 70")
                time.sleep(tempo/2)
                print("  > Poção: 4")
                time.sleep(tempo/2)
                print("  > Ataque: 9\n")
                time.sleep(tempo)
                print("• Assim por diante. A cada nível a vida aumenta 5 pontos e o ataque 1 ponto. E a cada 2 níveis a poção aumenta 1 ponto.\n")
                break
            elif instrucoes == 'NÃO' or instrucoes == 'Não' or instrucoes == 'não' or instrucoes == 'N' or instrucoes == 'n':
                print("")
                break
            else:
                raise TypeError ('Entrada Inválida!')
        except TypeError as e:
            print(e)